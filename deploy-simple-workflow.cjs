#!/usr/bin/env node

/**
 * Simplified n8n Workflow Deployment
 * Creates a working email workflow with webhook and schedule triggers
 */

const N8N_API_URL = 'http://18.221.12.50:5678/api/v1';
const N8N_API_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjODIxMTllNy1lYThlLTQyYzItYjgyNS1hY2ViNTk4OWQ2N2IiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzU0MjYzMTM4fQ.VIvNOzeo2FtKUAgdVLcV9Xrg9XLC-xl11kp6yb_FraU';

// Create a simple workflow with webhook and email
const workflowData = {
  "name": `[WEBHOOK+SCHEDULE] Email Automation ${Date.now()}`,
  "nodes": [
    {
      "id": "webhook_trigger",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [250, 300],
      "typeVersion": 2,
      "parameters": {
        "httpMethod": "POST",
        "path": `email-webhook-${Date.now()}`,
        "responseMode": "lastNode",
        "options": {}
      }
    },
    {
      "id": "schedule_trigger",
      "name": "Schedule",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [250, 500],
      "typeVersion": 1.2,
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 1,
              "triggerAtHour": 9
            },
            {
              "field": "hours",
              "hoursInterval": 1,
              "triggerAtHour": 18
            }
          ]
        }
      }
    },
    {
      "id": "set_data",
      "name": "Prepare Email Data",
      "type": "n8n-nodes-base.set",
      "position": [450, 400],
      "typeVersion": 3.4,
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "to",
              "type": "string",
              "value": "={{ $json.to || 'jimkalinov@gmail.com' }}"
            },
            {
              "id": "2",
              "name": "subject",
              "type": "string",
              "value": "={{ $json.subject || 'ü§ñ Automated Email from n8n - ' + new Date().toLocaleString() }}"
            },
            {
              "id": "3",
              "name": "message",
              "type": "string",
              "value": "={{ $json.content || 'This is an automated email sent at ' + new Date().toLocaleString() + '. The workflow is working correctly!' }}"
            },
            {
              "id": "4",
              "name": "timestamp",
              "type": "string",
              "value": "={{ new Date().toISOString() }}"
            }
          ]
        },
        "options": {}
      }
    },
    {
      "id": "format_html",
      "name": "Format HTML Email",
      "type": "n8n-nodes-base.code",
      "position": [650, 400],
      "typeVersion": 2,
      "parameters": {
        "mode": "runOnceForAllItems",
        "language": "javascript",
        "jsCode": "const data = items[0].json;\nconst now = new Date();\nconst timeString = now.toLocaleString('en-US', { \n  weekday: 'long', \n  year: 'numeric', \n  month: 'long', \n  day: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n});\n\nconst html = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;\">\n  <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 10px 10px 0 0; text-align: center;\">\n    <h1 style=\"margin: 0;\">üöÄ n8n Workflow Notification</h1>\n    <p style=\"margin: 10px 0 0 0; opacity: 0.9;\">${timeString}</p>\n  </div>\n  \n  <div style=\"background: white; border: 1px solid #e0e0e0; border-top: none; padding: 30px;\">\n    <h2 style=\"color: #333; margin-top: 0;\">Workflow Executed Successfully!</h2>\n    \n    <div style=\"background: #f5f5f5; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n      <h3 style=\"color: #667eea; margin-top: 0;\">Message:</h3>\n      <p style=\"color: #555; line-height: 1.6;\">${data.message}</p>\n    </div>\n    \n    <div style=\"background: #e8f4fd; padding: 15px; border-left: 4px solid #2196F3; margin: 20px 0;\">\n      <h4 style=\"color: #1976D2; margin: 0 0 10px 0;\">üìä Execution Details:</h4>\n      <p style=\"margin: 5px 0; color: #555;\"><strong>Timestamp:</strong> ${data.timestamp}</p>\n      <p style=\"margin: 5px 0; color: #555;\"><strong>Recipient:</strong> ${data.to}</p>\n      <p style=\"margin: 5px 0; color: #555;\"><strong>Trigger Type:</strong> ${$execution.mode}</p>\n    </div>\n    \n    <div style=\"margin-top: 30px; padding: 20px; background: #f8f9fa; border-radius: 8px; text-align: center;\">\n      <p style=\"color: #666; margin: 0;\">This email was automatically generated by n8n workflow automation</p>\n      <p style=\"color: #999; font-size: 12px; margin: 10px 0 0 0;\">Powered by n8n + SMTP Integration</p>\n    </div>\n  </div>\n</body>\n</html>\n`;\n\nreturn [{\n  to: data.to,\n  subject: data.subject,\n  html: html,\n  from: 'n8n-workflow@automation.com'\n}];"
      }
    },
    {
      "id": "send_email",
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "position": [850, 400],
      "typeVersion": 2.1,
      "parameters": {
        "sendTo": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "emailType": "html",
        "htmlBody": "={{ $json.html }}",
        "options": {}
      },
      "credentials": {
        "smtp": {
          "id": "1",
          "name": "SMTP account"
        }
      }
    }
  ],
  "connections": {
    "Webhook": {
      "main": [[{"node": "Prepare Email Data", "type": "main", "index": 0}]]
    },
    "Schedule": {
      "main": [[{"node": "Prepare Email Data", "type": "main", "index": 0}]]
    },
    "Prepare Email Data": {
      "main": [[{"node": "Format HTML Email", "type": "main", "index": 0}]]
    },
    "Format HTML Email": {
      "main": [[{"node": "Send Email", "type": "main", "index": 0}]]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
};

async function deployWorkflow() {
  console.log('üöÄ Deploying Email Workflow to n8n...\n');
  
  try {
    // Create workflow
    console.log('üìù Creating workflow...');
    const createResponse = await fetch(`${N8N_API_URL}/workflows`, {
      method: 'POST',
      headers: {
        'X-N8N-API-KEY': N8N_API_KEY,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(workflowData)
    });
    
    const createResult = await createResponse.json();
    
    if (!createResponse.ok) {
      throw new Error(`Failed to create workflow: ${JSON.stringify(createResult)}`);
    }
    
    console.log(`‚úÖ Workflow created: ${createResult.data.name}`);
    console.log(`   ID: ${createResult.data.id}`);
    
    // Activate workflow
    console.log('\n‚ö° Activating workflow...');
    const activateResponse = await fetch(`${N8N_API_URL}/workflows/${createResult.data.id}/activate`, {
      method: 'POST',
      headers: {
        'X-N8N-API-KEY': N8N_API_KEY
      }
    });
    
    const activateResult = await activateResponse.json();
    
    if (!activateResponse.ok) {
      console.warn('‚ö†Ô∏è Could not activate workflow automatically');
      console.log('   Please activate it manually in the n8n UI');
    } else {
      console.log('‚úÖ Workflow activated successfully!');
    }
    
    // Get webhook URL
    const webhookPath = workflowData.nodes[0].parameters.path;
    const webhookUrl = `http://18.221.12.50:5678/webhook/${webhookPath}`;
    
    // Display summary
    console.log('\n' + '='.repeat(60));
    console.log('üìã DEPLOYMENT SUMMARY');
    console.log('='.repeat(60));
    console.log(`\n‚úÖ Workflow Name: ${createResult.data.name}`);
    console.log(`‚úÖ Workflow ID: ${createResult.data.id}`);
    console.log(`‚úÖ Status: ${activateResult.data?.active ? 'ACTIVE' : 'INACTIVE'}`);
    console.log(`\nüîó Webhook URL: ${webhookUrl}`);
    
    console.log('\nüì¨ Test the webhook with curl:');
    console.log(`curl -X POST ${webhookUrl} \\
  -H "Content-Type: application/json" \\
  -d '{
    "to": "jimkalinov@gmail.com",
    "subject": "Test Email from n8n",
    "content": "This is a test email!"
  }'`);
    
    console.log('\n‚è∞ Schedule Triggers:');
    console.log('   - 9:00 AM daily');
    console.log('   - 6:00 PM daily');
    
    console.log('\n‚ö†Ô∏è IMPORTANT: Configure SMTP in n8n UI:');
    console.log('1. Go to http://18.221.12.50:5678');
    console.log('2. Open the workflow');
    console.log('3. Click on "Send Email" node');
    console.log('4. Add SMTP credentials:');
    console.log('   - For Gmail: Use app password');
    console.log('   - Host: smtp.gmail.com');
    console.log('   - Port: 587');
    console.log('   - User: your email');
    console.log('   - Password: app password');
    
    console.log('\n' + '='.repeat(60));
    console.log('‚ú® Deployment completed!');
    
    // Test webhook after 2 seconds
    console.log('\n‚è≥ Testing webhook in 2 seconds...');
    setTimeout(async () => {
      console.log('\nüß™ Testing webhook...');
      try {
        const testResponse = await fetch(webhookUrl, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            to: 'jimkalinov@gmail.com',
            subject: '‚úÖ n8n Webhook Test Successful',
            content: 'Your webhook is working! Configure SMTP to send emails.'
          })
        });
        
        if (testResponse.ok) {
          console.log('‚úÖ Webhook test successful!');
        } else {
          console.log('‚ö†Ô∏è Webhook returned:', testResponse.status);
        }
      } catch (error) {
        console.log('‚ö†Ô∏è Webhook test failed:', error.message);
        console.log('   The webhook may need manual activation in n8n UI');
      }
    }, 2000);
    
  } catch (error) {
    console.error('‚ùå Deployment failed:', error.message);
    process.exit(1);
  }
}

// Run deployment
deployWorkflow();