{
  "name": "[USR-jimkalinov] Daily Weather Email",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 7 * * *"
            }
          ]
        }
      },
      "id": "schedule-trigger",
      "name": "Daily 7AM Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "url": "https://api.openweathermap.org/data/2.5/weather",
        "options": {
          "qs": {
            "q": "Boston",
            "appid": "bd5e378503939ddaee76f12ad7a97608",
            "units": "imperial"
          }
        }
      },
      "id": "http-weather",
      "name": "Get Boston Weather",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [450, 300]
    },
    {
      "parameters": {
        "functionCode": "// Format weather data for email\nconst weather = items[0].json;\n\nconst temp = Math.round(weather.main.temp);\nconst feelsLike = Math.round(weather.main.feels_like);\nconst description = weather.weather[0].description;\nconst humidity = weather.main.humidity;\nconst windSpeed = Math.round(weather.wind.speed);\nconst sunrise = new Date(weather.sys.sunrise * 1000).toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });\nconst sunset = new Date(weather.sys.sunset * 1000).toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });\n\n// Weather advice based on conditions\nlet advice = '';\nif (description.includes('rain')) {\n  advice = '🌂 Don\\'t forget your umbrella today!';\n} else if (description.includes('snow')) {\n  advice = '❄️ Bundle up and drive carefully!';\n} else if (temp > 85) {\n  advice = '🌡️ It\\'s going to be hot! Stay hydrated.';\n} else if (temp < 40) {\n  advice = '🧥 It\\'s chilly outside. Grab a warm jacket!';\n} else if (description.includes('clear')) {\n  advice = '😎 Perfect weather! Enjoy your day!';\n} else {\n  advice = 'Have a wonderful day!';\n}\n\n// Format HTML email\nconst html = `\n<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }\n    .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n    .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 10px 10px 0 0; }\n    .content { background: #f7fafc; padding: 30px; border-radius: 0 0 10px 10px; }\n    .temp { font-size: 48px; font-weight: bold; color: #2d3748; }\n    .details { margin: 20px 0; }\n    .detail-row { display: flex; justify-content: space-between; padding: 10px 0; border-bottom: 1px solid #e2e8f0; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h1 style=\"margin: 0;\">Good Morning! ☀️</h1>\n      <p style=\"margin: 10px 0 0 0;\">Your Boston Weather Update</p>\n    </div>\n    <div class=\"content\">\n      <div style=\"text-align: center;\">\n        <div class=\"temp\">${temp}°F</div>\n        <p style=\"font-size: 18px; color: #4a5568; text-transform: capitalize;\">${description}</p>\n      </div>\n      \n      <div class=\"details\">\n        <div class=\"detail-row\">\n          <span>🌡️ Feels Like</span>\n          <strong>${feelsLike}°F</strong>\n        </div>\n        <div class=\"detail-row\">\n          <span>💧 Humidity</span>\n          <strong>${humidity}%</strong>\n        </div>\n        <div class=\"detail-row\">\n          <span>💨 Wind Speed</span>\n          <strong>${windSpeed} mph</strong>\n        </div>\n        <div class=\"detail-row\">\n          <span>🌅 Sunrise</span>\n          <strong>${sunrise}</strong>\n        </div>\n        <div class=\"detail-row\">\n          <span>🌇 Sunset</span>\n          <strong>${sunset}</strong>\n        </div>\n      </div>\n      \n      <div style=\"background: #edf2f7; padding: 15px; border-radius: 8px; margin-top: 20px;\">\n        <p style=\"margin: 0; color: #4a5568;\">${advice}</p>\n      </div>\n    </div>\n  </div>\n</body>\n</html>\n`;\n\nreturn [{\n  json: {\n    to: 'jimkalinov@gmail.com',\n    subject: `☀️ Your Boston Weather Update - ${new Date().toLocaleDateString()}`,\n    html: html,\n    text: `Good Morning! Your Boston Weather Update\\n\\nCurrent Temperature: ${temp}°F\\nFeels Like: ${feelsLike}°F\\nConditions: ${description}\\n\\nHumidity: ${humidity}%\\nWind Speed: ${windSpeed} mph\\nSunrise: ${sunrise}\\nSunset: ${sunset}\\n\\n${advice}\\n\\nPowered by Clixen Automation`,\n    from: 'onboarding@resend.dev'\n  }\n}];"
      },
      "id": "format-email",
      "name": "Format Email",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "url": "https://api.resend.com/emails",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer re_eP6sgKMF_ELjbAvaFyFEsSbnj3pzFUJm2"
            }
          ]
        },
        "options": {},
        "bodyParametersJson": "={{ $json }}"
      },
      "id": "send-email",
      "name": "Send via Resend",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [850, 300]
    }
  ],
  "connections": {
    "Daily 7AM Trigger": {
      "main": [[{"node": "Get Boston Weather", "type": "main", "index": 0}]]
    },
    "Get Boston Weather": {
      "main": [[{"node": "Format Email", "type": "main", "index": 0}]]
    },
    "Format Email": {
      "main": [[{"node": "Send via Resend", "type": "main", "index": 0}]]
    }
  },
  "settings": {
    "timezone": "America/New_York"
  }
}